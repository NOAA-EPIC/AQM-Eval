# Please use this namelist script for MM settings. 13 plot/analysis options are included: save_paired, timeseries, taylor, spatial_bias, spatial_overlay, boxplot, multi_boxplot, scorecard_rmse, scorecard_ioa, scorecard_nmb, scorecard_nme, csi, and stats.
# For AQMv8 evaluation, two models (base, eval) and airnow observation are used by default.
# Any key that is specific for a plot type will begin with ts for timeseries, ty for taylor
# Opt: Specifying the variable or variable group is optional
# For now all plots except time series average over the analysis window.
# Seting axis values - If set_axis = True in data_proc section of each plot_grp the yaxis for the plot will be set based on the values specified in the obs section for each variable. If set_axis is set to False, then defaults will be used. 'vmin_plot' and 'vmax_plot' are needed for 'timeseries', 'spatial_overlay', and 'boxplot'. 'vdiff_plot' is needed for 'spatial_bias' plots and'ty_scale' is needed for 'taylor' plots. 'nlevels' or the number of levels used in the contour plot can also optionally be provided for spatial_overlay plot. If set_axis = True and the proper limits are not provided in the obs section, a warning will print, and the plot will be created using the default limits.

# ==== General settings ====
# For MM yamls
package_key: aqs_voc
# Time format: yyyy-mm-dd-HH:MM:SS UTC
start_time: {{ ctx.date_first_cycle_mm }}
end_time: {{ ctx.date_last_cycle_mm }}
output_dir: {{ package.mm_package_output_dir }}
debug_option: True
mm_tasks: {{ mm_tasks }}

# ==== Paired file ====
paired_format: '"netcdf"'
paired_predix: "~"
paired_save_data: '"all"'
paired_dataset:
{%- for mm_model in package.mm_models %}
  {{ mm_model.label }}: "aqs_voc_{{ mm_model.label }}.nc4"
{%- endfor %}

{% for mm_model in package.mm_models %}
# ==== Model - {{ mm_model.role.value }} ====
model_{{ mm_model.role.value }}_label: {{ mm_model.label }}
model_{{ mm_model.role.value }}_files: {{ mm_model.link_alldays_path_template }}
model_{{ mm_model.role.value }}_type: '"rrfs"'
model_{{ mm_model.role.value }}_kwargs:
  surf_only: True
  mech: "cb6r3_ae6_aq"
model_{{ mm_model.role.value }}_radius: 20_000
model_{{ mm_model.role.value }}_mapping:
  etha: 'ETHANE'
  prpa: 'PROPANE'
  benzene: 'BENZENE'
  tol: 'TOLUENE'
  isop: 'ISOPRENE'
model_{{ mm_model.role.value }}_variables: "~"
model_{{ mm_model.role.value }}_projection: "~"
model_{{ mm_model.role.value }}_plot_kwargs:
  color: {{ mm_model.plot_kwargs_color }}
  marker: "^"
  linestyle: "-"
  markersize: 4
{% endfor %}

# ==== Obs (AQS VOC by default) ====
obs_label: {{ package.key.value }}
obs_airnow: False
obs_aqs: True
obs_file: {{ ctx.mm_obs_aqs_voc_fn_template }}
obs_variables:
  ETHANE:
    unit_scale: 1
    unit_scale_method: "*" # Multiply = '*' , Add = '+', subtract = '-', divide = '/'
    #obs_min: 0 # set all values less than this value to NaN
    #obs_max: 100 # set all values greater than this value to NaN
    nan_value: -1.0 # Set this value to NaN
    #The obs_min, obs_max, and nan_values are set to NaN first and then the unit conversion is applied.
    ylabel_plot: "ETHANE (ppb)" #Optional to set ylabel so can include units and/or instr etc.
    ty_scale: 3.0 #Opt
    vmin_plot: 0.0 #Opt Min for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
    vmax_plot: 5.0 #Opt Max for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
    vdiff_plot: 1.0 #Opt +/- range to use in bias plots. To apply to a plot, change restrict_yaxis = True.
    nlevels_plot: 20 #Opt number of levels used in colorbar for contourf plot.
    # regulatory: True #Opt compute regulatory func
  PROPANE:
    unit_scale: 1 #Opt Scaling factor
    unit_scale_method: "*" #Opt Multiply = '*' , Add = '+', subtract = '-', divide = '/'
    nan_value: -1.0 # Opt Set this value to NaN
    ylabel_plot: "PROPANE (ppbv)"
    ty_scale: 3.0 #Opt
    vmin_plot: 0.0 #Opt Min for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
    vmax_plot: 5.0 #Opt Max for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
    vdiff_plot: 1.0 #Opt +/- range to use in bias plots. To apply to a plot, change restrict_yaxis = True.
    nlevels_plot: 20 #Opt number of levels used in colorbar for contourf plot.
    #regulatory: True #Opt compute regulatory functions
  BENZENE:
    unit_scale: 1 #Opt Scaling factor
    unit_scale_method: "*" # Multiply = '*' , Add = '+', subtract = '-', divide = '/'
    nan_value: -1.0 # Set this value to NaN
    #The obs_min, obs_max, and nan_values are set to NaN first and then the unit conversion is applied.
    ylabel_plot: "BENZENE (ppbv)" #Optional to set ylabel so can include units and/or instr etc.
    vmin_plot: 0.0 #Opt Min for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
    vmax_plot: 5.0 #Opt Max for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
    vdiff_plot: 1.0 #Opt +/- range to use in bias plots. To apply to a plot, change restrict_yaxis = True.
    nlevels_plot: 20 #Opt number of levels used in colorbar for contourf plot.
  TOLUENE:
    unit_scale: 1 #Opt Scaling factor
    unit_scale_method: "*" #Opt Multiply = '*' , Add = '+', subtract = '-', divide = '/'
    nan_value: -1.0 # Set this value to NaN
    ylabel_plot: "TOLUENE (ppbv)" #Optional to set ylabel so can include units and/or instr etc.
    vmin_plot: 0.0 #Opt Min for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
    vmax_plot: 5.0 #Opt Max for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
    vdiff_plot: 1.0 #Opt +/- range to use in bias plots. To apply to a plot, change restrict_yaxis = True.
    nlevels_plot: 20 #Opt number of levels used in colorbar for contourf plot.
  ISOPRENE:
    unit_scale: 1 #Opt Scaling factor
    unit_scale_method: "*" # Multiply = '*' , Add = '+', subtract = '-', divide = '/'
    nan_value: -1.0 # Set this value to NaN
    #The obs_min, obs_max, and nan_values are set to NaN first and then the unit conversion is applied.
    ylabel_plot: "ISOPRENE (ppbv)" #Optional to set ylabel so can include units and/or instr etc.
    vmin_plot: 0.0 #Opt Min for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
    vmax_plot: 10.0 #Opt Max for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
    vdiff_plot: 2.0 #Opt +/- range to use in bias plots. To apply to a plot, change restrict_yaxis = True.
    nlevels_plot: 20 #Opt number of levels used in colorbar for contourf plot.

# ==== pg1 - timeseries ====
timeseries_fig_kwargs:
  figsize: [12, 6]
timeseries_plot_kwargs:
  linewidth: 2.0
  markersize: 10
timeseries_text_kwargs:
  fontsize: 24
timeseries_domain_type: [
  "all",
  "epa_region", "epa_region", "epa_region", "epa_region", "epa_region",
  "epa_region", "epa_region", "epa_region", "epa_region", "epa_region",
]
timeseries_domain_name: [
  "CONUS",
  "R1", "R2", "R3", "R4", "R5",
  "R6", "R7", "R8", "R9", "R10",
]
timeseries_dataset: {{ package.mm_model_labels }}
timeseries_data_proc:
  rem_obs_nan: True  # True: Remove all points where model or obs is NaN; False: Remove only points where model is NaN.
  set_axis: True  # If true, add `vmin_plot` and `vmax_plot` for each variable in obs.
  ts_select_time: "time_local"  # Options: 'time' for UTC or 'time_local' for LT
  ts_avg_window: "H"  # None for no averaging, pandas resample rule (e.g., 'H', 'D')


# ==== pg2 - taylor ====
taylor_fig_kwargs:
  figsize: [8, 8]
taylor_plot_kwargs:
  markersize: 10
taylor_text_kwargs:
  fontsize: 24
taylor_domain_type: [
  "all",
  "epa_region", "epa_region", "epa_region", "epa_region", "epa_region",
  "epa_region", "epa_region", "epa_region", "epa_region", "epa_region",
]
taylor_domain_name: [
  "CONUS",
  "R1", "R2", "R3", "R4", "R5",
  "R6", "R7", "R8", "R9", "R10",
]
taylor_dataset: {{ package.mm_model_labels }}
taylor_data_proc:
  rem_obs_nan: True  # True: Remove all points where model or obs is NaN; False: Remove only points where model is NaN.
  set_axis: True  # If true, add `vmin_plot` and `vmax_plot` for each variable in obs.


# ==== pg3 - spatial_bias ====
spatial_bias_fig_kwargs:
  states: True
  figsize: [10, 5]
spatial_bias_text_kwargs:
  fontsize: 24
#spatial_bias_domain_type: [
#  "all",
#  "epa_region", "epa_region", "epa_region", "epa_region", "epa_region",
#  "epa_region", "epa_region", "epa_region", "epa_region", "epa_region",
#]
spatial_bias_domain_type: [
  "all"
]
#spatial_bias_domain_name: [
#  "CONUS",
#  "R1", "R2", "R3", "R4", "R5",
#  "R6", "R7", "R8", "R9", "R10",
#]
spatial_bias_domain_name: [
  "CONUS"
]
spatial_bias_dataset: {{ package.mm_model_labels }}
spatial_bias_data_proc:
  rem_obs_nan: True  # True: Remove all points where model or obs is NaN; False: Remove only points where model is NaN.
  set_axis: True  # If true, add `vmin_plot` and `vmax_plot` for each variable in obs.


# ==== pg4 - spatial_overlay ====
spatial_overlay_fig_kwargs:
  states: True
  figsize: [10, 5]
spatial_overlay_text_kwargs:
  fontsize: 24
#spatial_overlay_domain_type: [
#  "all",
#  "epa_region", "epa_region", "epa_region", "epa_region", "epa_region",
#  "epa_region", "epa_region", "epa_region", "epa_region", "epa_region",
#]
spatial_overlay_domain_type: [
  "all"
]
#spatial_overlay_domain_name: [
#  "CONUS",
#  "R1", "R2", "R3", "R4", "R5",
#  "R6", "R7", "R8", "R9", "R10",
#]
spatial_overlay_domain_name: [
  "CONUS"
]
spatial_overlay_dataset: {{ package.mm_model_labels }}
spatial_overlay_data_proc:
  rem_obs_nan: True  # True: Remove all points where model or obs is NaN; False: Remove only points where model is NaN.
  set_axis: True  # If true, add `vmin_plot` and `vmax_plot` for each variable in obs.


# ==== pg5 - boxplot ====
boxplot_fig_kwargs:
  figsize: [8, 6]
boxplot_text_kwargs:
  fontsize: 24
boxplot_domain_type: [
  "all",
  "epa_region", "epa_region", "epa_region", "epa_region", "epa_region",
  "epa_region", "epa_region", "epa_region", "epa_region", "epa_region",
]
boxplot_domain_name: [
  "CONUS",
  "R1", "R2", "R3", "R4", "R5",
  "R6", "R7", "R8", "R9", "R10",
]
boxplot_dataset: {{ package.mm_model_labels }}
boxplot_data_proc:
  rem_obs_nan: True  # True: Remove all points where model or obs is NaN; False: Remove only points where model is NaN.
  set_axis: True  # If true, add `vmin_plot` and `vmax_plot` for each variable in obs.


# ==== pg6 - multi_boxplot ====
multi_boxplot_fig_kwargs:
  figsize: [8, 6]
multi_boxplot_text_kwargs:
  fontsize: 24
multi_boxplot_domain_type: ["all"]
multi_boxplot_domain_name: ["CONUS"]
multi_boxplot_region_type: ["epa_region"]
multi_boxplot_region_name: ["R1", "R2", "R3", "R4", "R5", "R6", "R7", "R8", "R9", "R10"]
multi_boxplot_urban_rural_name: ["msa_name"]
multi_boxplot_urban_rural_value: '""'
multi_boxplot_eval_method: '"NME"'  # support 'RMSE', 'IOA' ,' NMB', 'NME'
multi_boxplot_dataset: {{ package.mm_model_labels }}
multi_boxplot_dataset_label: ["AQS", {{ package.mm_model_titles_j2 }}]
multi_boxplot_data_proc:
  rem_obs_nan: True  # True: Remove all points where model or obs is NaN; False: Remove only points where model is NaN.
  set_axis: True  # If true, add `vmin_plot` and `vmax_plot` for each variable in obs.


# ==== pg7 - scorecard ====
scorecard_fig_kwargs:
  figsize: [18, 10]
scorecard_text_kwargs:
  fontsize: 24
scorecard_domain_type: ["all"]
scorecard_domain_name: ["CONUS"]
scorecard_region_type: ["epa_region"]
scorecard_region_name: ["R1", "R2", "R3", "R4", "R5", "R6", "R7", "R8", "R9", "R10"]
scorecard_urban_rural_name: ["msa_name"]
scorecard_urban_rural_value: '""'
scorecard_eval_method: '"RMSE"'  # support 'RMSE', 'IOA' ,' NMB', 'NME'
scorecard_dataset: {{ package.mm_model_labels }}
scorecard_dataset_label: ["AQS", {{ package.mm_model_titles_j2 }}]


scorecard_data_proc:
  rem_obs_nan: True  # True: Remove all points where model or obs is NaN; False: Remove only points where model is NaN.
  set_axis: False  # If true, add `vmin_plot` and `vmax_plot` for each variable in obs.


# ==== pg8 - csi ====
csi_fig_kwargs:
  figsize: [8, 6]
csi_text_kwargs:
  fontsize: 24
csi_domain_type: [
  "all",
  "epa_region", "epa_region", "epa_region", "epa_region", "epa_region",
  "epa_region", "epa_region", "epa_region", "epa_region", "epa_region",
]
csi_domain_name: [
  "CONUS",
  "R1", "R2", "R3", "R4", "R5",
  "R6", "R7", "R8", "R9", "R10",
]
csi_threshold: [1, 5, 10, 20, 40, 60, 80, 100]
csi_score: '"Hit Rate"'  # support options: 'Critical Success Index' 'False Alarm Rate' 'Hit Rate'
csi_dataset: {{ package.mm_model_labels }}
csi_dataset_label: [{{ package.mm_model_titles_j2 }}]
csi_data_proc:
  rem_obs_nan: True  # True: Remove all points where model or obs is NaN; False: Remove only points where model is NaN.
  set_axis: False  # If true, add `vmin_plot` and `vmax_plot` for each variable in obs.


# ==== Stats ====
stats_score_list: ["MB", "MdnB", "NMB", "NMdnB", "ME", "MdnE", "NME", "NMdnE", "IOA", "R2", "RMSE", "AC"]
stats_table_option: False
stats_table_kwargs:
  figsize: [7, 3]
  fontsize: 12.
  xscale: 1.4
  yscale: 1.4
  edges: "horizontal"
stats_domain_type: [
    "all",
    "epa_region", "epa_region", "epa_region", "epa_region", "epa_region",
    "epa_region", "epa_region", "epa_region", "epa_region", "epa_region",
]
stats_domain_name: [
    "CONUS",
    "R1", "R2", "R3", "R4", "R5",
    "R6", "R7", "R8", "R9", "R10",
]
stats_dataset: {{ package.mm_model_labels }}
